#
# Copyright 2022 Adobe. All rights reserved.
# This file is licensed to you under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
# OF ANY KIND, either express or implied. See the License for the specific language
# governing permissions and limitations under the License.
#

version: 2.1
orbs:
  android: circleci/android@2.1.2
  codecov: codecov/codecov@3.2.4

# Workflows orchestrate a set of jobs to be run;
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - validate-code:
          gradle-cache-prefix: v1
          build-cache-prefix: v1

      - build-and-unit-test:
          gradle-cache-prefix: v1
          build-cache-prefix: v1
          requires:
            - validate-code

      - functional-test:
          gradle-cache-prefix: v1
          build-cache-prefix: v1
          requires:
            - validate-code
      
      - integration-test:
          gradle-cache-prefix: v1
          build-cache-prefix: v1
          requires:
            - validate-code
          filters:
            branches:
              only:
                - main
                - staging

jobs:
  validate-code:
    parameters:
      gradle-cache-prefix:
        type: string
        default: v1
      build-cache-prefix:
        type: string
        default: v1

    # List of available Android Docker images: https://circleci.com/developer/images/image/cimg/android#image-tags
    executor:
      name: android/android-docker
      tag: 2022.09.2-node

    steps:
      - checkout

      - android/restore-gradle-cache:
          cache-prefix: << parameters.gradle-cache-prefix >>
      - android/restore-build-cache:
          cache-prefix: << parameters.build-cache-prefix >>

      - run:
          name: Check Code Format
          command: make format-check

      - run:
          name: Lint Code
          command: make lint-check

      - android/save-gradle-cache:
          cache-prefix: << parameters.gradle-cache-prefix >>
      - android/save-build-cache:
          cache-prefix: << parameters.build-cache-prefix >>

      # Store Lint report
      - store_artifacts:
          path: code/edge/build/reports

  build-and-unit-test:
    parameters:
      gradle-cache-prefix:
        type: string
        default: v1
      build-cache-prefix:
        type: string
        default: v1

    # List of available Android Docker images: https://circleci.com/developer/images/image/cimg/android#image-tags
    executor:
      name: android/android-docker
      tag: 2022.09.2-node

    steps:
      - checkout

      - android/restore-gradle-cache:
          cache-prefix: << parameters.gradle-cache-prefix >>
      - android/restore-build-cache:
          cache-prefix: << parameters.build-cache-prefix >>

      - run:
          name: Javadoc
          command: make ci-javadoc
      - store_artifacts:
          path: ci/javadoc/build/reports

      - run:
          name: Build
          command: make ci-build

      - run:
          name: Build App
          command: make ci-build-app

      - android/run-tests:
          test-command: make ci-unit-test

      - android/save-gradle-cache:
          cache-prefix: << parameters.gradle-cache-prefix >>
      - android/save-build-cache:
          cache-prefix: << parameters.build-cache-prefix >>

      # Code coverage upload using Codecov
      # See options explanation here: https://docs.codecov.com/docs/codecov-uploader
      - codecov/upload:
          file: ci/unit-test/build/reports/jacoco/platformUnitTestJacocoReport/platformUnitTestJacocoReport.xml
          flags: unit-tests

      - store_artifacts:
          path: ci/unit-test/build/reports

      # On test failures, the step in the Makefile to copy the reports to ci/ is not run, so store test results from build folder instead.
      - store_test_results:
          path: code/edge/build/test-results

  functional-test:
    parameters:
      gradle-cache-prefix:
        type: string
        default: v1
      build-cache-prefix:
        type: string
        default: v1

    # list of available Android machine images: https://circleci.com/developer/machine/image/android#image-tags
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2022.09.1
    steps:
      - checkout

      - android/restore-build-cache:
          cache-prefix: << parameters.build-cache-prefix >>

      - run:
          name: List available emulator images
          command: sdkmanager --list

      - android/start-emulator-and-run-tests:
          #   It should match the name seen in the "sdkmanager --list" output
          system-image: system-images;android-29;default;x86
          #   The command to be run, while waiting for emulator startup
          post-emulator-launch-assemble-command: make ci-build
          #   The test command
          test-command: make ci-functional-test
          restore-gradle-cache-prefix: << parameters.gradle-cache-prefix >>

      - android/save-build-cache:
          cache-prefix: << parameters.build-cache-prefix >>

      # Code coverage upload using Codecov
      # See options explanation here: https://docs.codecov.com/docs/codecov-uploader
      - codecov/upload:
          file: ci/functional-test/build/reports/coverage/androidTest/phone/debug/connected/report.xml
          flags: functional-tests

      - store_artifacts:
          path: ci/functional-test/build/reports

      # On test failures, the step in the Makefile to copy the reports to ci/ is not run, so store test results from build folder instead.
      - store_test_results:
          path: code/edge/build/outputs/androidTest-results

  integration-test:
    parameters:
      gradle-cache-prefix:
        type: string
        default: v1
      build-cache-prefix:
        type: string
        default: v1

    # list of available Android machine images: https://circleci.com/developer/machine/image/android#image-tags
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2022.09.1
    steps:
      - checkout

      - android/restore-build-cache:
          cache-prefix: << parameters.build-cache-prefix >>

      - run:
          name: List available emulator images
          command: sdkmanager --list

      - android/start-emulator-and-run-tests:
          #   It should match the name seen in the "sdkmanager --list" output
          system-image: system-images;android-29;default;x86
          #   The command to be run, while waiting for emulator startup
          post-emulator-launch-assemble-command: make ci-build
          #   The test command
          test-command: make ci-upstream-integration-test
          restore-gradle-cache-prefix: << parameters.gradle-cache-prefix >>

      - android/save-build-cache:
          cache-prefix: << parameters.build-cache-prefix >>

      # On test failures, the step in the Makefile to copy the reports to ci/ is not run, so store test results from build folder instead.
      - store_test_results:
          path: code/integration-tests/build/outputs/androidTest-results/connected
