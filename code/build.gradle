/**
 * Copyright 2019 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
import com.hierynomus.gradle.license.tasks.LicenseFormat

// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    // Android Gradle Plugin version
    id 'com.android.application' version '7.3.0' apply false
    id 'com.android.library' version '7.3.0' apply false
    id 'com.diffplug.gradle.spotless' version '6.11.0' apply false
    id 'com.github.hierynomus.license' version '0.16.1' apply true
    id 'org.jetbrains.kotlin.android' version '1.7.20' apply false
    id 'org.jetbrains.dokka' version '1.7.10' apply false
}

moduleProjectName = rootProject.moduleProjectName
moduleName=rootProject.moduleName
moduleAARName=rootProject.moduleAARName
moduleVersion=rootProject.moduleVersion

ext {
    // android config
    minSdkVersion = 19
    targetSdkVersion = 33
    compileSdkVersion = 33
    versionCode = 1

    kotlinLanguageVersion = '1.4'
    kotlinApiVersion = '1.4'
    kotlinJvmTarget = JavaVersion.VERSION_1_8

    // java config
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    // dependencies
    junitVersion = "1.1.5"
    mockitoVersion = "4.5.1"
    testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    jacocoVersion = "0.8.8"
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}

license {
    header rootProject.file('../config/formatter/header.txt')
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    skipExistingHeaders = true
}

// Add and maintain licence header to all project files of type XML, YAML, Properties, and Gradle
tasks.register('licenseFormatProject', LicenseFormat) {
    source = fileTree(dir: "../")
            .exclude(["**/.idea/*", "**/build/*", "**/*.java", "**/*.kt", "**/.git/*", "**/.gradle/*", "**/gradle/wrapper/*", "config/*", "**/local.properties"])
            .include(["**/*.xml", "**/*.yml", "**/*.properties", "**/*.gradle"])
}
licenseFormat.dependsOn licenseFormatProject
