# Action to execute upstream integration tests - Edge Network (Konductor)
name: Integration Tests

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to use when running integration tests'
        required: false
        default: 'main'
      id:
        description: 'Identifier for the run (optional)'
        required: false
      environment:
        type: choice
        description: 'Edge Network environment to test'
        required: true
        default: 'prod'
        options:
          - prod
          - pre-prod
          - int
      edge-location-hint:
        type: choice
        description: 'Edge location hint to set before each test (optional)'
        required: false
        default: ''
        options: 
          - '' # Interpreted in the test code as no preset location hint; any non-valid location hint string is interpreted this way
          - 'or2'
          - 'va6'
          - 'irl1'
          - 'ind1'
          - 'jpn3'
          - 'sgp3'
          - 'aus3'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test-integration-upstream:
    # The type of runner that the job will run on
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [29]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - name: Job run identifier ${{ github.event.inputs.id }}
      run: |
        if [ -z "${{ github.event.inputs.id }}" ]; then \
          echo No job run identifier was set.
        else
          echo 'Job run identifier is:' ${{ inputs.id }}
        fi;

    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Setup JAVA 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 11

    # - name: Gradle cache
    #   uses: gradle/gradle-build-action@v2
        
    # - name: AVD cache
    #   uses: actions/cache@v3
    #   id: avd-cache
    #   with:
    #     path: |
    #       ~/.android/avd/*
    #       ~/.android/adb*
    #     key: avd-${{ matrix.api-level }}
    
    # - name: create AVD and generate snapshot for caching
    #   if: steps.avd-cache.outputs.cache-hit != 'true'
    #   uses: reactivecircus/android-emulator-runner@v2
    #   with:
    #     api-level: ${{ matrix.api-level }}
    #     force-avd-creation: false
    #     emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
    #     disable-animations: false
    #     script: echo "Generated AVD snapshot for caching."

    - name: run tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: make ci-integration-test
    
    # Potential workflow solutions on job failure
    - name: On failure
      if: ${{ failure() }}
      run: |
        echo 'Job used branch: ' ${{ github.event.inputs.branch }}. Please make sure this is the branch to run off of.
